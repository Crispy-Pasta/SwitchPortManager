version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dell-port-tracer-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: port_tracer_db
      POSTGRES_USER: porttracer_user
      POSTGRES_PASSWORD: porttracer_pass
    volumes:
      # Use named volume for database persistence (survives container rebuilds)
      - postgres_data_persistent:/var/lib/postgresql/data
      # Protected backups directory
      - ./backups:/backups
    networks:
      - dell-port-tracer
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U porttracer_user -d port_tracer_db']
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: dell-port-tracer-app
    restart: unless-stopped
    env_file:
      # Use protected environment file from data directory
      - ./data/.env.production
    volumes:
      # Application logs (persistent)
      - ./logs/app:/app/logs
      # Protected backups directory
      - ./backups:/app/backups
      # Protected data directory (read-only for sensitive files)
      - ./data:/app/data:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dell-port-tracer
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: dell-port-tracer-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      # Nginx configuration
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Protected SSL certificates
      - ./data/ssl:/etc/nginx/ssl:ro
      - ./ssl:/etc/nginx/ssl:ro
      # Nginx logs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - dell-port-tracer
    healthcheck:
      test: ['CMD', 'nginx', '-t']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  dell-port-tracer:
    driver: bridge

volumes:
  # Named volume with consistent name for database persistence
  postgres_data_persistent:
    driver: local
    name: dell_port_tracer_postgres_data
  # Additional volumes for organization
  app_logs:
    driver: local
  nginx_logs:
    driver: local
