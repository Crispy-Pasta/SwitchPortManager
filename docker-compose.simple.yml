# Dell Switch Port Tracer - Simple Production Deployment
# Version: 2.1.6
# For fresh server deployments - uses pre-built Docker images

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: port-tracer-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-port_tracer_db}
      POSTGRES_USER: ${POSTGRES_USER:-dell_tracer_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - port-tracer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dell_tracer_user} -d ${POSTGRES_DB:-port_tracer_db}"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    image: ghcr.io/crispy-pasta/port-tracer:latest
    container_name: port-tracer-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      # Database Configuration
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATABASE_URL=${DATABASE_URL}
      
      # Application Security
      - SECRET_KEY=${SECRET_KEY}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE:-false}
      - SESSION_COOKIE_HTTPONLY=${SESSION_COOKIE_HTTPONLY:-true}
      - SESSION_COOKIE_SAMESITE=${SESSION_COOKIE_SAMESITE:-Lax}
      - PERMANENT_SESSION_LIFETIME=${PERMANENT_SESSION_LIFETIME:-5}
      
      # Switch Credentials
      - SWITCH_USERNAME=${SWITCH_USERNAME}
      - SWITCH_PASSWORD=${SWITCH_PASSWORD}
      
      # User Passwords
      - OSS_PASSWORD=${OSS_PASSWORD:-oss123}
      - NETADMIN_PASSWORD=${NETADMIN_PASSWORD:-netadmin123}
      - SUPERADMIN_PASSWORD=${SUPERADMIN_PASSWORD:-superadmin123}
      - WEB_PASSWORD=${WEB_PASSWORD:-password}
      
      # Performance Settings
      - CPU_GREEN_THRESHOLD=${CPU_GREEN_THRESHOLD:-40}
      - CPU_YELLOW_THRESHOLD=${CPU_YELLOW_THRESHOLD:-60}
      - CPU_RED_THRESHOLD=${CPU_RED_THRESHOLD:-80}
      - MAX_CONCURRENT_SWITCHES=${MAX_CONCURRENT_SWITCHES:-8}
      - GLOBAL_MAX_CONCURRENT=${GLOBAL_MAX_CONCURRENT:-64}
      
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - port-tracer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  port-tracer-network:
    driver: bridge
