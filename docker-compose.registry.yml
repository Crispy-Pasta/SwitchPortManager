# Dell Port Tracer - Registry-Based Production Docker Compose
# Designed for GitHub Actions CI/CD with Docker Registry deployment

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dell-port-tracer-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-port_tracer_db}
      POSTGRES_USER: ${POSTGRES_USER:-dell_tracer_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - dell-port-tracer
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-dell_tracer_user} -d ${POSTGRES_DB:-port_tracer_db}']
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    image: ghcr.io/crispy-pasta/switchportmanager/port-tracer:latest
    container_name: dell-port-tracer-app-prod
    env_file: .env
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dell-port-tracer
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: dell-port-tracer-nginx-prod
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - dell-port-tracer
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  dell-port-tracer:
    driver: bridge
