# =============================================================================
# Dell Port Tracer - Production Multi-Stage Dockerfile
# Optimized for CI/CD pipeline with GitHub Actions and Docker Registry
# =============================================================================

# Stage 1: Base Python Environment
FROM python:3.11-slim as base

# Build arguments for metadata
ARG VERSION=unknown
ARG BUILD_DATE=unknown
ARG GIT_COMMIT=unknown

# Environment variables for production
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    curl \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Stage 2: Dependencies Installation
FROM base as dependencies

# Create app directory and user
RUN groupadd -r app && useradd -r -g app app
WORKDIR /app

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt \
    && pip install gunicorn

# Stage 3: Application Build
FROM dependencies as application

# Copy application source code
COPY --chown=app:app . .

# Create necessary directories
RUN mkdir -p /app/logs /app/static/img /app/instance /app/backups \
    && chown -R app:app /app

# Remove development files and sensitive data
RUN rm -rf \
    .git \
    .github \
    .vscode \
    *.md \
    tests/ \
    .pytest_cache/ \
    __pycache__/ \
    *.pyc \
    .env.* \
    docker-compose*.yml \
    Dockerfile* \
    .dockerignore

# Stage 4: Production Runtime
FROM dependencies as production

# Copy only the application files from build stage
COPY --from=application --chown=app:app /app /app

# Add metadata labels
LABEL \
    org.opencontainers.image.title="Dell Port Tracer" \
    org.opencontainers.image.description="Enterprise Network Switch Port Management System" \
    org.opencontainers.image.version="${VERSION}" \
    org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.revision="${GIT_COMMIT}" \
    org.opencontainers.image.vendor="Dell Technologies" \
    org.opencontainers.image.source="https://github.com/Crispy-Pasta/SwitchPortManager"

# Switch to non-root user
USER app

# Expose application port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Default command using Gunicorn for production
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "4", "--worker-class", "sync", "--worker-connections", "1000", "--max-requests", "1000", "--preload", "port_tracer_web:app"]
